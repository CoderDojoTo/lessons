NOTE: You can use this if a ninja is having a hard time typing the SQL statements.

Card 2:
	Step 1: SHOW databases;
	Step 2: CREATE database CoderDojo;
	Step 3: SHOW databases;
	Step 4: USE CoderDojo
	Step 5: SHOW tables;

Card 3:
	Step 1:CREATE table Cartoons(cartoon_id int not null auto_increment,
				     cartoon_name varchar(50),
				     description varchar(255),
				     year_released year,
				     primary key(cartoon_id));
	Step 2: DESCRIBE Cartoons;
	Step 3: CREATE table Characters(character_id int not null auto_increment,
					character_name varchar(255),
					gender enum("male","female","undisclosed"),
					cartoon_id int,
					primary key(character_id),
					foreign key(cartoon_id) REFERENCES Cartoons(cartoon_id));


Card 4:
	Step 1: INSERT INTO Cartoons VALUES(1,
					   "Frozen",
					   "Frozen is about Anna who teams up with Kristoff and his reindeer Sven to find Anna's Sister, Elsa.",
					   2013);
	Step 2: INSERT INTO Cartoons(cartoon_name,year_released) VALUES("Despicable Me", 2010);
		SELECT * from Cartoons;
	Step 3: INSERT INTO Characters(character_name, gender, cartoon_id) VALUES("Princess Anna", "female", 1);

Card 5:
	Step 1: SELECT * FROM Characters;
	Step 2: SELECT character_name, gender FROM Characters;
	Step 3: SELECT * FROM Characters WHERE cartoon_id=1;
	Step 4: SELECT * FROM Characters WHERE cartoon_id=1 AND gender="female";
		SELECT * FROM Characters WHERE cartoon_id=1 OR gender="female";
	Step 5: SELECT character_id, character_name FROM characters WHERE character_name LIKE "o%";
		SELECT character_id, character_name FROM characters WHERE character_name LIKE "%o";
		SELECT character_id, character_name FROM characters WHERE character_name LIKE "%o%";
	Step 6: SELECT character_name FROM Characters ORDER BY character_name ASC;
		SELECT character_name FROM Characters ORDER BY character_name DESC;
	Step 7: SELECT * FROM Characters ORDER BY character_id;
		SELECT * FROM Characters ORDER BY character_id DESC;
	Step 8: SELECT * FROM Characters WHERE cartoon_id=1 ORDER BY character_name DESC;

Card 6:
	Step 1: UPDATE Characters SET character_name="Tommy" WHERE character_id=1;
	Step 2: SELECT * FROM Characters;
	Step 3: DELETE FROM Characters WHERE character_id=7;
	Step 4: SELECT * FROM Characters;

Card 7:
	Step 1:INSERT INTO Cartoons(cartoon_name, description, year_released)
			   VALUES("Spongebob Squarepants",
				  "The adventure of spongebob and his friends in the city of Bikini Bottom.",
                                  1999);

	       INSERT INTO Cartoons(cartoon_name, description, year_released)
			   VALUES("Inside Out",
				  "Riley Anderson tries to lead through life as she moves to a new city.",
				  2015);
	Step 2: INSERT INTO Characters(character_name, gender) VALUES("Po", "male");
		INSERT INTO Characters(character_name, gender) VALUES("Tigress", "female");
		INSERT INTO Characters(character_name, gender) VALUES("Shifu", "male");
		INSERT INTO Characters(character_name, gender) VALUES("Viper", "female");
	Step 3: SELECT ch.character_name, c.cartoon_name 
		FROM Characters ch
		JOIN Cartoons c ON ch.cartoon_id=c.cartoon_id;
	Step 4: SELECT ch.character_name, c.cartoon_name 
		FROM Characters ch
		LEFT JOIN Cartoons c ON ch.cartoon_id=c.cartoon_id;
	Step 5: SELECT ch.character_name, c.cartoon_name
		FROM Characters ch
		RIGHT JOIN Cartoons c ON ch.cartoon_id=c.cartoon_id;

Card 8:
	Step 1: CREATE DATABASE Secret_Database;
	Step 2: USE Secret_Database;
	Step 3: SHOW tables;
	Step 4: DROP TABLE Persons;
	Step 5: SHOW tables;
	Step 6: DROP DATABASE Secret_Database;
	Step 7: SHOW databases;
	Step 8: exit